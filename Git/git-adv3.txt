기초

- 깃 설치, 깃배시 설치
- 생성한 깃허브 계정과 로컬머신에 있는 깃 연동
  - git cofig --global user.name 
  - git cofig --global user.email
- 기초 리눅스 명령어
  - pwd, cd(. ..), ls
- Vim 에디터 사용법
  - 명령모드(:w, :q, :wq), 입력모드


git(디팩토 스탠다드, 사실상의 표준)
- 버전 관리를 해주는 기술
  1. 실행취소, 재실행이 가능하다
  2. 버전간 비교가 가능하다.
  3. 협업에 용이하다.

깃에서는 깃을 구성하는 기본 단위인 '커밋'을 사용해
버전관리를 한다.

커밋을 만들때는 항상 해당 커밋이 무슨 내용을 담는지를 설명하는 '커밋 메시지'를 함께 적어준다.

커밋은 언제 만드나?
"논리적 변경이 있을때 만든다"

커밋 크기는 작을 수록 좋다.


저장소 vs 일반폴더
git init


브랜치
저장소를 만들면 기둥역할을 하는 브랜치(master, main)가 하나 기본적으로 생성된다.

이동가능한 경량의 커밋을 가리키는 포인터

회사에서는 일할 때 무조건 브랜치 하나 만들고 작업한다.

브랜치 병합할때
충돌이 나는경우, 나지않는 경우
git add, git commit



git init
git add
git commit
git merge
git branch
git branch 브랜치명


1. 새로운 브랜치 만들기 
  - (git branch feature1)
2. 해당 브랜치로 전환하기
  - git checkout feature1
  - git switch feature1

  --> 1번과 2번을 동시에 할 수 있게 해주는 명령어
      - git checkout -b feature1

- dev 브랜치를 기준으로 브랜치 2~3개정도 만들어보기
   - feature1, feature2, feature3, 


회사에서 일할 때 우리 엔지니어들은
개발서버와 연동되어있는 브랜치를 기준으로 
새 브랜치를 분기해서 작업한다.

작업이 끝나고 dev브랜치에 일정량의 커밋이 모이면
(테스트 후) master/main브랜치에 dev브랜치를 머지한다.


git flow
github flow
gitlab flow

브랜치 전략
브랜치 전략은 팀 상황에 맞게 선택한다.
위 세 전략이 답은 아니다. 
근데 거의 모든 조직이 세 전략을 기반으로 별도의 규칙을 '팀원들과 합의하여' 정한다.

git reset HEAD~1
git reset HEAD^

git reset HEAD~2
git reset HEAD^^

git reset HEAD~3
git reset HEAD^^^

git reflog

30분까지 쉬고 다시 모여요~
커밋 체크아웃했을 때 나오는 로그창 읽기

id(identifier, identification)

커밋 체크아웃하는거는 '타임머신'타고 과거로 가는것과 비슷하다

타임머신을 만든 과학자가,
타임머신타고 과거로 가려는 사람에게
무서운'경고'를 한다.



reset은 나혼자 작업하는 브랜치에서만 한다.\




엔지니어 한명이 하루에 이슈 하나씩만 하지 않는다.
이보라가 오늘 맡은 이슈가 5개인경우,
브랜치 5개를 만들고 작업한다.

브랜치는 포인터다
포인터를 삭제해도, 노드(메모리)에 있는 정보는 사라지지 않는다.



git은 '분산' 버전 관리 시스템





브랜치 병합할때.
1. git merge

A브랜치를 B브랜치로 병합하려고 할 때,
1. B브랜치 체크아웃
2. git merge A 


브랜치 병합할때 쓸수 있는 두 번째 방법
리베이스
re-base

리베이스 사용해서 브랜치 머지할 때 주의할점
나 혼자작업하는 브랜치에서만 해야한다.



인터랙티브 리베이스

- 커밋메시지 마음대로 바꿀 수 있다.
- 커밋 순서 바꿀 수 있다.
- 커밋을 합칠 수 있다.
- 커밋을 쪼갤 수 있다.



잘쓴글은 목차만 봐도 그 글을 잘 썼는지 아닌지 알 수 있다.

깃크라켄
소스트리